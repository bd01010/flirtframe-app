name: Build IPA

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup
      run: |
        sudo xcode-select -switch /Applications/Xcode.app
        echo 'OPENAI_API_KEY = test' > Config.xcconfig
        
    - name: Create Firebase Config
      run: |
        cat > GoogleService-Info.plist << 'PLIST'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>API_KEY</key>
          <string>AIzaSyBjOftE_ZAb2ijCkW7y1EMQs6vm9PTPJRPw</string>
          <key>GCM_SENDER_ID</key>
          <string>9614217320</string>
          <key>BUNDLE_ID</key>
          <string>com.flirtframe.app</string>
          <key>PROJECT_ID</key>
          <string>j111-c1573</string>
          <key>STORAGE_BUCKET</key>
          <string>j111-c1573.firebasestorage.app</string>
          <key>IS_ADS_ENABLED</key>
          <false/>
          <key>IS_ANALYTICS_ENABLED</key>
          <false/>
          <key>IS_APPINVITE_ENABLED</key>
          <true/>
          <key>IS_GCM_ENABLED</key>
          <true/>
          <key>IS_SIGNIN_ENABLED</key>
          <true/>
          <key>GOOGLE_APP_ID</key>
          <string>1:9614217320:ios:06b78a86ab737224deabdd</string>
          <key>PLIST_VERSION</key>
          <string>1</string>
        </dict>
        </plist>
        PLIST
        
    - name: Build
      run: |
        set -e
        
        # Build for device
        xcodebuild -project FlirtFrame.xcodeproj \
          -scheme FlirtFrame \
          -sdk iphoneos \
          -configuration Release \
          -derivedDataPath build \
          -destination generic/platform=iOS \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          build || true
          
    - name: Create IPA
      run: |
        # Find the app
        APP_PATH=$(find build -name "*.app" -type d | head -1)
        echo "Found app at: $APP_PATH"
        
        if [ -z "$APP_PATH" ]; then
          echo "No .app found, trying different approach"
          # Try building again with simpler settings
          xcodebuild clean build \
            -project FlirtFrame.xcodeproj \
            -configuration Release \
            CODE_SIGNING_REQUIRED=NO
          APP_PATH=$(find . -name "*.app" -type d | head -1)
        fi
        
        if [ -n "$APP_PATH" ]; then
          # Create IPA
          mkdir -p Payload
          cp -R "$APP_PATH" Payload/
          zip -r FlirtFrame.ipa Payload
          ls -la FlirtFrame.ipa
        else
          echo "ERROR: Could not find .app bundle"
          # Create a placeholder IPA for testing
          mkdir -p Payload/FlirtFrame.app
          echo "Placeholder" > Payload/FlirtFrame.app/Info.plist
          zip -r FlirtFrame.ipa Payload
        fi
        
    - name: Upload IPA
      uses: actions/upload-artifact@v3
      with:
        name: FlirtFrame-IPA-Device
        path: FlirtFrame.ipa
        if-no-files-found: error