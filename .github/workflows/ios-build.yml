name: iOS Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app
      
    - name: Create GoogleService-Info.plist
      run: |
        echo '<?xml version="1.0" encoding="UTF-8"?>' > GoogleService-Info.plist
        echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> GoogleService-Info.plist
        echo '<plist version="1.0">' >> GoogleService-Info.plist
        echo '<dict>' >> GoogleService-Info.plist
        echo '  <key>API_KEY</key>' >> GoogleService-Info.plist
        echo '  <string>AIzaSyBjOftE_ZAb2ijCkW7y1EMQs6vm9PTPJRPw</string>' >> GoogleService-Info.plist
        echo '  <key>GCM_SENDER_ID</key>' >> GoogleService-Info.plist
        echo '  <string>9614217320</string>' >> GoogleService-Info.plist
        echo '  <key>PLIST_VERSION</key>' >> GoogleService-Info.plist
        echo '  <string>1</string>' >> GoogleService-Info.plist
        echo '  <key>BUNDLE_ID</key>' >> GoogleService-Info.plist
        echo '  <string>com.flirtframe.app</string>' >> GoogleService-Info.plist
        echo '  <key>PROJECT_ID</key>' >> GoogleService-Info.plist
        echo '  <string>j111-c1573</string>' >> GoogleService-Info.plist
        echo '  <key>STORAGE_BUCKET</key>' >> GoogleService-Info.plist
        echo '  <string>j111-c1573.firebasestorage.app</string>' >> GoogleService-Info.plist
        echo '  <key>IS_ADS_ENABLED</key>' >> GoogleService-Info.plist
        echo '  <false/>' >> GoogleService-Info.plist
        echo '  <key>IS_ANALYTICS_ENABLED</key>' >> GoogleService-Info.plist
        echo '  <false/>' >> GoogleService-Info.plist
        echo '  <key>IS_APPINVITE_ENABLED</key>' >> GoogleService-Info.plist
        echo '  <true/>' >> GoogleService-Info.plist
        echo '  <key>IS_GCM_ENABLED</key>' >> GoogleService-Info.plist
        echo '  <true/>' >> GoogleService-Info.plist
        echo '  <key>IS_SIGNIN_ENABLED</key>' >> GoogleService-Info.plist
        echo '  <true/>' >> GoogleService-Info.plist
        echo '  <key>GOOGLE_APP_ID</key>' >> GoogleService-Info.plist
        echo '  <string>1:9614217320:ios:06b78a86ab737224deabdd</string>' >> GoogleService-Info.plist
        echo '</dict>' >> GoogleService-Info.plist
        echo '</plist>' >> GoogleService-Info.plist
        
    - name: Show current directory
      run: |
        pwd
        ls -la
        
    - name: Check project structure
      run: |
        ls -la *.xcodeproj || echo "No xcodeproj found"
        ls -la Package.swift || echo "No Package.swift found"
        
    - name: List available schemes
      run: |
        xcodebuild -list -project FlirtFrame.xcodeproj || echo "Failed to list schemes"
        
    - name: Resolve Dependencies
      run: |
        if [ -f "Package.swift" ]; then
          echo "Using Swift Package Manager"
          xcodebuild -resolvePackageDependencies || echo "SPM resolution failed, continuing..."
        else
          echo "No Package.swift found"
        fi
        
    - name: Build for Simulator
      run: |
        # Try to build without specifying scheme first
        xcodebuild clean build \
          -project FlirtFrame.xcodeproj \
          -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 14' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ONLY_ACTIVE_ARCH=NO || echo "Build failed, trying with explicit configuration..."
          
        # If that fails, try with explicit configuration
        xcodebuild clean build \
          -project FlirtFrame.xcodeproj \
          -configuration Debug \
          -sdk iphonesimulator \
          -arch x86_64 \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO